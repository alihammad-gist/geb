{"version":3,"sources":["webpack:///./src/components/reports/template/listing.tsx"],"names":["reportsListQuery","p","title","pageContext","currentPage","type","SectionType","darkOverWhite","md","className","totalPages","linkGenerator","page","data","allStrapiReport","edges","map","idx","report","node","key","left","src","cover","publicURL","style","maxWidth","color","href","document","tag","target","id","size","toPrecision","body","max","expandable","text","summary"],"mappings":"2FAAA,qNAWaA,EAAmB,aAiCjB,mBAACC,GACZ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,MAAK,gBAAkBD,EAAEE,YAAYC,cAC3C,kBAAC,IAAD,CAASC,KAAMC,IAAYC,eACvB,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,KACJ,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CAAKA,GAAG,KACJ,kBAAC,IAAD,CACIC,UAAU,cACVL,YAAaH,EAAEE,YAAYC,YAC3BM,WAAYT,EAAEE,YAAYO,WAC1BC,cAAe,SAACC,GAAD,OAAUA,EAAO,EAAP,iBAA4BA,EAAS,mBAElE,uBAAGH,UAAU,mBAAb,QACUR,EAAEE,YAAYC,YADxB,MACwCH,EAAEE,YAAYO,YAEtD,yBAAKD,UAAU,2BACdR,EAAEY,KAAKC,gBAAgBC,MAAMC,KAAI,WAAmBC,GAAQ,IAAlBC,EAAkB,EAAxBC,KACjC,OACI,kBAAC,IAAD,CACIC,IAAKH,EACLR,UAAS,+LAMT,kBAAC,IAAD,CAAOY,MAAI,EAACZ,UAAS,8PAMjB,yBACIa,IAAKJ,EAAOK,MAAMC,UAClBf,UAAU,oBACVgB,MAAO,CACHC,SAAU,WAGlB,kBAAC,IAAD,CACIC,MAAM,SACNC,KAAMV,EAAOW,SAASL,UACtBM,IAAI,IACJC,OAAO,SACPtB,UAAU,mBACVuB,GAAE,mBAAqBf,GAEvB,0BAAMR,UAAU,aACZ,kBAAC,IAAD,CAAgBwB,KAAK,WACrB,qGAIR,kBAAC,IAAD,CAAgBF,OAAM,mBAAqBd,GAA3C,wBAGSC,EAAOW,SAASI,KAAO,KAASC,YAAY,GAHrD,QAOJ,kBAAC,IAAD,CAAOC,MAAI,GACP,wBAAI1B,UAAU,MAAMS,EAAOhB,OAC3B,kBAAC,IAAD,CACIkC,IAAK,IACLC,YAAY,EACZC,KAAMpB,EAAOqB,eAMjC,yBAAK9B,UAAU,6BACf,kBAAC,IAAD,CACIA,UAAU,cACVL,YAAaH,EAAEE,YAAYC,YAC3BM,WAAYT,EAAEE,YAAYO,WAC1BC,cAAe,SAACC,GAAD,OAAUA,EAAO,EAAP,iBAA4BA,EAAS,mBAElE,uBAAGH,UAAU,mBAAb,QACUR,EAAEE,YAAYC,YADxB,MACwCH,EAAEE,YAAYO","file":"component---src-components-reports-template-listing-tsx-6bbfa7d7f8941d82e423.js","sourcesContent":["import React from 'react';\nimport { QueryResult } from '../query';\nimport { graphql } from 'gatsby';\nimport { Layout, Section, SectionType } from '../../layout';\nimport Head from '../../head';\nimport { Container, Row, Col, Media, Button } from 'reactstrap';\nimport { WorkMenu } from '../../menu';\nimport { Truncate, DefaultTooltip } from '../../text';\nimport { MdFileDownload } from 'react-icons/md';\nimport { PaginationNav } from '../../nav';\n\nexport const reportsListQuery = graphql`\n    query reportListing($skip: Int!, $limit: Int!) {\n            allStrapiReport(skip: $skip, limit: $limit) {\n            edges {\n                node {\n                    id\n                    title\n                    document {\n                        publicURL\n                        size\n                    }\n                    cover {\n                        publicURL\n                        size\n                    }\n                    summary\n                    publishing_date\n                }\n            }\n            }\n        }\n`;\n\ntype props = {\n    data: QueryResult\n    pageContext: {\n        skip: number\n        limit: number\n        totalPages: number\n        currentPage: number\n    }\n}\n\nexport default (p: props) => {\n    return (\n        <Layout>\n            <Head title={`Reports Page ${p.pageContext.currentPage}`} />\n            <Section type={SectionType.darkOverWhite}>\n                <Container>\n                    <Row>\n                        <Col md=\"3\">\n                            <WorkMenu />\n                        </Col>\n                        <Col md=\"9\">\n                            <PaginationNav\n                                className=\"float-right\"\n                                currentPage={p.pageContext.currentPage}\n                                totalPages={p.pageContext.totalPages}\n                                linkGenerator={(page) => page > 1 ? `/work/reports/${page}` : '/work/reports'}\n                            />\n                            <p className=\"float-left mt-2\">\n                                Page {p.pageContext.currentPage} / {p.pageContext.totalPages}\n                            </p>\n                            <div className=\"clearfix border-bottom\" />\n                            {p.data.allStrapiReport.edges.map(({ node: report }, idx) => {\n                                return (\n                                    <Media\n                                        key={idx}\n                                        className={`\n                                            p-2\n                                            py-4\n                                            ${/*idx % 2 === 0 ? 'bg-light' : */''}\n                                        `}\n                                    >\n                                        <Media left className={`\n                                            mr-4\n                                            pr-4\n                                            py-2\n                                            border-right\n                                        `}>\n                                            <img\n                                                src={report.cover.publicURL}\n                                                className='fluid-img d-block'\n                                                style={{\n                                                    maxWidth: \"150px\"\n                                                }}\n                                            />\n                                            <Button\n                                                color=\"accent\"\n                                                href={report.document.publicURL}\n                                                tag='a'\n                                                target=\"_blank\"\n                                                className=\"float-right mt-2\"\n                                                id={`download_report_${idx}`}\n                                            >\n                                                <span className=\"icon-text\">\n                                                    <MdFileDownload size='1.3rem' />\n                                                    <span>\n                                                        Download PDF                                                     </span>\n                                                </span>\n                                            </Button>\n                                            <DefaultTooltip target={`download_report_${idx}`}>\n\n                                                File download size: {\n                                                    (report.document.size / 1000000).toPrecision(2)\n                                                } MB\n                                            </DefaultTooltip>\n                                        </Media>\n                                        <Media body>\n                                            <h2 className=\"h4\">{report.title}</h2>\n                                            <Truncate\n                                                max={350}\n                                                expandable={true}\n                                                text={report.summary}\n                                            />\n                                        </Media>\n                                    </Media>\n                                );\n                            })}\n                            <div className=\"clearfix border-top mb-3\" />\n                            <PaginationNav\n                                className=\"float-right\"\n                                currentPage={p.pageContext.currentPage}\n                                totalPages={p.pageContext.totalPages}\n                                linkGenerator={(page) => page > 1 ? `/work/reports/${page}` : '/work/reports'}\n                            />\n                            <p className=\"float-left mt-2\">\n                                Page {p.pageContext.currentPage} / {p.pageContext.totalPages}\n                            </p>\n                        </Col>\n                    </Row>\n                </Container>\n            </Section>\n        </Layout>\n    );\n}\n"],"sourceRoot":""}